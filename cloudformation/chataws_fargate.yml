AWSTemplateFormatVersion: '2010-09-09'
Description: Stack for creating Fargate and resources associated with the ChatAWS application

Parameters:
  VpcId:
    Description: The ID of the VPC
    Type: AWS::EC2::VPC::Id

  SubnetId:
    Description: The ID of the Subnet
    Type: AWS::EC2::Subnet::Id

  EcrRepositoryUrl:
    Description: The URL of the ECR repository
    Type: String

  SlackBotSecretArn:
    Description: The ARN of the Slack Bot Secret in Secrets Manager
    Type: String
    
  SlackAppSecretArn:
    Description: The ARN of the Slack App Secret in Secrets Manager
    Type: String

  OpenAIAPISecretArn:
    Description: The ARN of the OpenAI API Secret in Secrets Manager
    Type: String 

Resources:
  FargateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the Fargate task
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  ECSCluster:
    Type: AWS::ECS::Cluster

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSSecretsManagerTaskExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  PolicyForSecretsManager:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AllowSecretsManagerAccess
      Roles:
        - !Ref ExecutionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: 
              - !Ref SlackBotSecretArn
              - !Ref SlackAppSecretArn
              - !Ref OpenAIAPISecretArn
              
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: '256'
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      ContainerDefinitions:
        - Name: SlackAppContainer
          Image: !Ref EcrRepositoryUrl
          Essential: true
          Secrets:
            - ValueFrom: !Ref SlackBotSecretArn
              Name: SLACK_BOT_TOKEN_CHATAWS
            - ValueFrom: !Ref OpenAIAPISecretArn
              Name: OPENAI_API_KEY
            - ValueFrom: !Ref SlackAppSecretArn
              Name: SLACK_APP_TOKEN_CHATAWS              
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: SlackAppContainer

  FargateService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets: 
            - !Ref SubnetId
          SecurityGroups: 
            - !GetAtt FargateSecurityGroup.GroupId
      TaskDefinition: !Ref TaskDefinition

  LogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    Properties:
      LogGroupName: /ecs/SlackAppContainer
      RetentionInDays: 7

Outputs:
  EcrRepositoryUrl:
    Description: The URL of the ECR repository
    Value: !Ref EcrRepositoryUrl
